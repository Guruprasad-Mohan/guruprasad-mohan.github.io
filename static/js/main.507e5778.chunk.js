(this.webpackJsonpblog=this.webpackJsonpblog||[]).push([[0],{21:function(e,t,i){},22:function(e,t,i){},23:function(e,t,i){},25:function(e,t,i){},32:function(e,t,i){"use strict";i.r(t);var s=i(1),n=i.n(s),c=i(15),a=i.n(c),r=(i(21),i(2)),o=(i(22),i(23),i(0)),l=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("h5",{children:"About Me"}),Object(o.jsxs)("div",{className:"font-body",children:["I am Guruprasad Mohan, working as a Software Engg. I am a Full-stack developer using .NET, Azure and React.",Object(o.jsx)("p",{children:"Code enthusiast & a life long learner."})]})]})},h=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("h2",{children:"Blog 1 - App Service Plan"}),Object(o.jsx)("h6",{children:"Nov 21, 2021"}),Object(o.jsx)("br",{}),Object(o.jsx)("p",{children:"App Service plan in Azure can be seen as a container for the App services. The App Services run within an App Service plan. It is possible to run to more than one App Services within an App Service plan. The compute resources necessary for an App service is defined inside an App Service plan."}),Object(o.jsx)("h5",{children:"Components of an App Service plan "}),Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:"Region"}),Object(o.jsx)("li",{children:"# of VM Instances"}),Object(o.jsx)("li",{children:"Size of VM"}),Object(o.jsx)("li",{children:"Pricing Tier"})]}),Object(o.jsx)("p",{children:"The Free and the Shared pricing tier may contain apps from multiple customers running in the same VM. These tiers do not support scaling out. The basic pricing tier and above run apps on dedicated VMs. The higher the tier, more VMs are available for scaling out. The isolated pricing tier runs dedicated VMs on dedicated Azure Virtual network thus supporting both compute and network isolation for the hosted applications."}),Object(o.jsx)("h5",{children:"Working of an App Service plan "}),Object(o.jsx)("p",{children:"Lets assume the pricing tier you have opted in the App Service plan has 5 VMs provisioned in the plan. The app service deployed in this plan runs on all the 5 provisioned VMs. The ancillary features of the app service like diagnostics, logging, montioring applications all share the same VM instances. By extension, if multiple apps are deployed within the Service plan, then the compute resources are similarly shared. This way, the App Service plan constitutes a scale unit of the App services."}),Object(o.jsx)("h5",{children:"Design Considerations"}),Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:"App Service plans can be scaled up and down by changing the pricing tiers."}),Object(o.jsx)("li",{children:"It is cost effective to share App Services within the same App Service plan. However, this should be planned judiciously considering the requirements of individual apps in the App Service plan."}),Object(o.jsx)("li",{children:"If a specific App Service within the App Service plan is considered more business critical/ has more traffic then it makes sense to move it to a separate App Service plan. This way it can be managed indenpendently from the other App services."})]})]})},p=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("h2",{children:"Blog 2 - API testing with Httprepl"}),Object(o.jsx)("h6",{children:"Nov 28, 2021"}),Object(o.jsx)("br",{}),Object(o.jsxs)("p",{children:["For ASPNET core developers with preference to the command line tools, Microsoft has provided a lightweight, cross platform command tool to test APIs. REPL (Run - Evaluate - Print - Loop) is a workflow popularized by applications like Nodejs.",Object(o.jsx)("br",{}),"Using this command line tool, we can make HTTP requests to test Web APIs and test their output. The httprepl tool ships as a NuGet package Microsoft.dotnet-httprepl."]}),Object(o.jsx)("h5",{children:"Setup"}),Object(o.jsx)("p",{children:"As a pre-requisite, the system should contain a .NETCore 2.1 SDK or higher. In the command prompt, run the below command. dotnet tool install -g Microsoft.dotnet-httprepl The -g option install the package as a global tool."}),Object(o.jsx)("h5",{children:"Usage"}),Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:"The first command to initiate the repl workflow is httprepl."}),Object(o.jsx)("li",{children:"Use the connect command to connect to a API base URI."}),Object(o.jsx)("li",{children:"The command ls can be used to list the available API endpoints. (This operation is possible only if the API implements Open API specifications like Swagger.)"}),Object(o.jsxs)("li",{children:["A sample operation for a GET endpoint runs as below -",Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:" At the command prompt - httprepl "}),Object(o.jsx)("li",{children:" connect https://localhost:[port]/[ControllerName] "}),Object(o.jsx)("li",{children:" ls "}),Object(o.jsx)("li",{children:" GET "})]})]})]}),Object(o.jsx)("h5",{children:"Demo Application"}),Object(o.jsxs)("p",{children:["Clone the repository - ",Object(o.jsx)("b",{children:"https://github.com/Guruprasad-Mohan/ApiClientDemo.git"})," for a sample implementation.",Object(o.jsx)("br",{}),"This a simple API implementation to demo the features of the Httprepl command tool.",Object(o.jsx)("br",{}),"The API contains 4 endpoints to support CRUD operations on a simple list of strings. ",Object(o.jsx)("br",{}),"The file Http-REPL-Commands.txt contains commands which needs to be executed from the command line to perform CRUD operations."]})]})},d=(i(25),function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("h2",{children:"Blog 3 - Azure App Deployment using CLI and Zip Files"}),Object(o.jsx)("h6",{children:"Dec 06, 2021"}),Object(o.jsx)("br",{}),Object(o.jsxs)("p",{children:["Many a times, we need to quickly deploy a small application to App service and test our code. ",Object(o.jsx)("br",{}),"At such times, it is easier and convenient to use Zip deployment of the code to the App Service. ",Object(o.jsx)("br",{}),"There are simple Azure CLI commands which can help achieve this outcome. If one prefers a UI based approach to perform the zip deployment, then there are features within the Kudu, which can be leveraged.",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),"I have listed below, the sequence of steps to create the App Service and deploy the application as zip files."]}),Object(o.jsx)("h5",{children:"Pre-requisite"}),Object(o.jsx)("p",{children:"Latest Azure CLI installed in the system. Active Azure subscription. Access to Visual Studio 2019 community edition."}),Object(o.jsx)("h5",{children:"Steps"}),Object(o.jsxs)("ul",{children:[Object(o.jsxs)("li",{children:[Object(o.jsx)("b",{children:"az-login"}),Object(o.jsx)("br",{}),"This command logs you into the Azure subscription. It prompts a login page for you to enter the Azure credentials. Once the login is successful, the command window displays the subscription and tenant details in JSON format."]}),Object(o.jsxs)("li",{className:"pt-2",children:["Create the Resource group (RG) - ",Object(o.jsx)("br",{})," ",Object(o.jsx)("b",{children:"az group create -l [location] -n [name of the RG] "})]}),Object(o.jsxs)("li",{className:"pt-2",children:["Set the default RG and Location ",Object(o.jsx)("br",{}),Object(o.jsx)("b",{children:" az config set defaults.group=[name of the RG] defaults.location=[location] "})]}),Object(o.jsxs)("li",{className:"pt-2",children:["Create and deploy an App Service. This becomes the App service URL ",Object(o.jsx)("i",{children:"http://[your_app_name].azurewebsites.net"})," ",Object(o.jsx)("br",{}),"Select a unique app name. ",Object(o.jsx)("br",{}),Object(o.jsx)("b",{children:"az webapp up --name [your_app_name] --logs --launch-browser"})]}),Object(o.jsx)("li",{className:"pt-2",children:"Use the default ASP.NET Core Web API scaffolding to create a simple Weather API app. We can test the zip deployment with this sample application."}),Object(o.jsxs)("li",{className:"pt-2",children:["Navigate to the project root folder in the command window and then type dotnet publish.",Object(o.jsx)("br",{}),"This step publishes the application code to the application root.",Object(o.jsx)("br",{}),"You can also right click the project file in the Visual studio and click Publish.",Object(o.jsx)("br",{}),"In the Publish profile, select folder deployment and retain default values or change to a preferred location for publish."]}),Object(o.jsxs)("li",{className:"pt-2",children:["In the command window, navigate to the publish folder created in the above step.",Object(o.jsx)("br",{}),"Use the below ",Object(o.jsx)("b",{children:"PowerShell"})," command to create a zip package of the publish folder.",Object(o.jsx)("br",{}),"Provide an appropriate file name in the square brackets below. ",Object(o.jsx)("br",{}),Object(o.jsx)("b",{children:"Compress-Archive -Path * -DestinationPath [file-name].zip"})]}),Object(o.jsxs)("li",{className:"pt-2",children:["Push the zip package to the App service using the below command.",Object(o.jsx)("br",{}),Object(o.jsx)("b",{children:"az webapp deploy --resource-group [name of the RG] --name [your_app_name] --src-path [zip-package-path]"})]}),Object(o.jsx)("li",{className:"pt-2",children:Object(o.jsxs)("ul",{children:[Object(o.jsx)("li",{children:" In case in prefer the UI based approach, then navigate to the App service in the portal.azure.com. "}),Object(o.jsx)("li",{children:" In the App service blade, select Advanced Tools under Development Tools. "}),Object(o.jsx)("li",{children:" Click on the Go Link in the Advanced Tools page. You will land up in the Kudu environment page. "}),Object(o.jsx)("li",{children:" Select Tools option in the header and select Zip Push Deploy. "}),Object(o.jsx)("li",{children:" Drag and drop the zip file created in the above step into this location. "})]})}),Object(o.jsxs)("li",{className:"pt-2",children:["Refresh the link ",Object(o.jsx)("i",{children:"http://[your_app_name].azurewebsites.net"})," and you should see the GET Response of Weather Controller displayed."]}),Object(o.jsx)("li",{className:"pt-2",children:"Happy Coding !!!"})]})]})}),j=function(){return Object(o.jsx)("div",{className:"mt-5 p-4 bg-dark text-white text-center",children:Object(o.jsx)("p",{children:"Mail your queries and feedback at gm.blogs.ghp@gmail.com"})})},b=function(){return Object(o.jsx)("div",{className:"p-3 bg-primary text-white text-center",children:Object(o.jsx)("h1",{children:"Guru's Tech space"})})};var u=function(){return Object(o.jsxs)("div",{className:"container-fluid",children:[Object(o.jsx)(b,{}),Object(o.jsx)("div",{className:"container mt-5",children:Object(o.jsxs)("div",{className:"row",children:[Object(o.jsx)("div",{className:"col-sm-2",children:Object(o.jsx)(l,{})}),Object(o.jsx)("div",{className:"col-sm-8",children:Object(o.jsxs)(r.c,{children:[Object(o.jsx)(r.a,{exact:!0,path:"/",children:Object(o.jsx)(h,{})}),Object(o.jsx)(r.a,{path:"/blogNov2821",children:Object(o.jsx)(p,{})}),Object(o.jsx)(r.a,{path:"/blogDec0621",children:Object(o.jsx)(d,{})})]})}),Object(o.jsxs)("div",{className:"col-sm-2",children:[Object(o.jsx)("h6",{className:"mt-4",children:"Links to previous blogs"}),Object(o.jsxs)("ul",{className:"flex-column",children:[Object(o.jsx)("li",{className:"nav-item",children:Object(o.jsx)("a",{className:"nav-link active",href:"/",children:"Blog Nov21, 2021"})}),Object(o.jsx)("li",{className:"nav-item",children:Object(o.jsx)("a",{className:"nav-link active",href:"/blogNov2821",children:"Blog Nov28, 2021"})}),Object(o.jsx)("li",{className:"nav-item",children:Object(o.jsx)("a",{className:"nav-link active",href:"/blogDec0621",children:"Blog Dec06, 2021"})})]})]})]})}),Object(o.jsx)(j,{})]})},m=(i(31),function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,33)).then((function(t){var i=t.getCLS,s=t.getFID,n=t.getFCP,c=t.getLCP,a=t.getTTFB;i(e),s(e),n(e),c(e),a(e)}))}),x=i(11);a.a.render(Object(o.jsx)(n.a.StrictMode,{children:Object(o.jsx)(x.a,{children:Object(o.jsx)(u,{})})}),document.getElementById("root")),m()}},[[32,1,2]]]);
//# sourceMappingURL=main.507e5778.chunk.js.map